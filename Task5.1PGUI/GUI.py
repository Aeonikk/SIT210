# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import RPi.GPIO as GPIO
from PyQt5 import QtCore, QtGui, QtWidgets

GPIO.setmode(GPIO.BOARD)
GPIO.setwarnings(False)

red = 11
green = 13
blue = 15
GPIO.setup(red, GPIO.OUT)
GPIO.setup(green, GPIO.OUT)
GPIO.setup(blue, GPIO.OUT)
GPIO.output(red, GPIO.LOW)
GPIO.output(green, GPIO.LOW)
GPIO.output(blue, GPIO.LOW)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.MainWindow = MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(428, 181)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.redButton = QtWidgets.QRadioButton(self.centralwidget)
        self.redButton.setGeometry(QtCore.QRect(30, 20, 121, 51))
        self.redButton.setStyleSheet("color: red; font: bold 15pt 'MS Sans Serif';")
        self.redButton.setObjectName("redButton")
        
        self.greenButton = QtWidgets.QRadioButton(self.centralwidget)
        self.greenButton.setGeometry(QtCore.QRect(160, 20, 121, 51))
        self.greenButton.setStyleSheet("color: green; font: bold 15pt 'MS Sans Serif';")
        self.greenButton.setObjectName("greenButton")
        
        self.blueButton = QtWidgets.QRadioButton(self.centralwidget)
        self.blueButton.setGeometry(QtCore.QRect(300, 20, 121, 51))
        self.blueButton.setStyleSheet("color: #00AAFF; font: bold 15pt 'MS Sans Serif';")
        self.blueButton.setObjectName("blueButton")
        
        self.exitButton = QtWidgets.QPushButton(self.centralwidget)
        self.exitButton.setGeometry(QtCore.QRect(150, 90, 121, 31))
        self.exitButton.setStyleSheet("font: 15pt 'MS Sans Serif';")
        self.exitButton.setObjectName("exitButton")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 428, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        #Button method calls
        self.redButton.toggled.connect(lambda: self.selection(self.redButton))
        self.greenButton.toggled.connect(lambda: self.selection(self.greenButton))
        self.blueButton.toggled.connect(lambda: self.selection(self.blueButton))

        self.exitButton.clicked.connect(self.exitProcedure)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.redButton.setText(_translate("MainWindow", "Red"))
        self.greenButton.setText(_translate("MainWindow", "Green"))
        self.blueButton.setText(_translate("MainWindow", "Blue"))
        self.exitButton.setText(_translate("MainWindow", "Exit"))

    def selection(self, button):
        if button.isChecked():
            colour = button.text().lower()
            match colour:
                case "red":
                    GPIO.output(green, GPIO.LOW)
                    GPIO.output(blue, GPIO.LOW)
                    GPIO.output(red, GPIO.HIGH)
                case "green":
                    GPIO.output(red, GPIO.LOW)
                    GPIO.output(blue, GPIO.LOW)
                    GPIO.output(green, GPIO.HIGH)
                case "blue":
                    GPIO.output(red, GPIO.LOW)
                    GPIO.output(green, GPIO.LOW)
                    GPIO.output(blue, GPIO.HIGH)
                case _:
                    GPIO.output(red, GPIO.LOW)
                    GPIO.output(green, GPIO.LOW)
                    GPIO.output(blue, GPIO.LOW)
                    
    def exitProcedure(self):
        GPIO.cleanup()
        self.MainWindow.close()



if __name__ == "__main__":
    import sys

    class MyMainWindow(QtWidgets.QMainWindow):
        def closeEvent(self, event):
            GPIO.cleanup()
            event.accept()

    app = QtWidgets.QApplication(sys.argv)
    app.setStyle("Fusion")
    MainWindow = MyMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

